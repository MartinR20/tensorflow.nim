Layer	/Users/martin/Documents/Projects/nim/tensorflow/tensorflow/tensorflow/htmldocs/layers/layer.html#Layer	layer: Layer	
`$`	/Users/martin/Documents/Projects/nim/tensorflow/tensorflow/tensorflow/htmldocs/layers/layer.html#$.e,Layer	layer: `$`(layer: Layer): string	
make	/Users/martin/Documents/Projects/nim/tensorflow/tensorflow/tensorflow/htmldocs/layers/layer.html#make.e,Layer,Scope	layer: make(layer: Layer; root: Scope): (proc (rt: Scope; input: Out): Out)	
makeJoin	/Users/martin/Documents/Projects/nim/tensorflow/tensorflow/tensorflow/htmldocs/layers/layer.html#makeJoin.e,Layer,Scope	layer: makeJoin(layer: Layer; root: Scope): (proc (rt: Scope; input: OutList): Out)	
isJoin	/Users/martin/Documents/Projects/nim/tensorflow/tensorflow/tensorflow/htmldocs/layers/layer.html#isJoin.e,Layer	layer: isJoin(layer: Layer): bool	
compile	/Users/martin/Documents/Projects/nim/tensorflow/tensorflow/tensorflow/htmldocs/layers/layer.html#compile,seq[T][Layer],Scope,Loss,Optim[N]	layer: compile[N](layers: seq[Layer]; root: Scope; loss: Loss; optim: Optim[N]): Model	
